(define (count-pairs x)
  (define addlist '())
  (define (iter x)
    (cond ((not (pair? x)) 0)
        ((memq x addlist) 0)
        (else (set! addlist (cons x addlist))
              (+ (iter (car x))
                 (iter (cdr x))
                 1))))
  (iter x))

(define x '(1))
(define y (cons x x))
(count-pairs y)
